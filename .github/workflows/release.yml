name: Build & Release (Windows)


permissions:
  contents: write

on:
  push:
    tags:
      - "v*.*.*"   # l√§uft bei vX.Y.Z
  workflow_dispatch: {}

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          python -m pip install -U pip setuptools wheel
          if (Test-Path "requirements-dev.txt") {
            pip install -r requirements-dev.txt
          } elseif (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          }

      - name: Build with PyInstaller
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          Set-ExecutionPolicy Bypass -Scope Process -Force
          ./build.ps1 -Clean
          Write-Host "=== TREE dist/Atlas ==="
          Get-ChildItem -Recurse dist/Atlas | Select-Object FullName

      - name: Install Inno Setup & build installer
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          choco install innosetup -y --no-progress
          $iss = "${{ github.workspace }}/installer.iss"
          $iscc = "C:/Program Files (x86)/Inno Setup 6/ISCC.exe"
          if (!(Test-Path $iscc)) { throw "ISCC not found at $iscc" }
          # Output-Ordner explizit setzen (nach <repo>/Output)
          & "$iscc" /Qp /O"${{ github.workspace }}/Output" "$iss"
          Write-Host "=== TREE Output (Installer) ==="
          Get-ChildItem -Recurse "${{ github.workspace }}/Output" | Select-Object FullName

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: Atlas-Installer
          path: Output/*.exe

      - name: Attach assets to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: Output/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
